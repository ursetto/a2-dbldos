### 6502bench SourceGen dis65 v1.0 ###
{
"_ContentVersion":4,
"FileDataLength":2585,
"FileDataCrc32":95894823,
"ProjectProps":{
"CpuName":"65C02",
"IncludeUndocumentedInstr":false,
"TwoByteBrk":false,
"EntryFlags":32702671,
"AutoLabelStyle":"Simple",
"AnalysisParams":{
"AnalyzeUncategorizedData":true,
"DefaultTextScanMode":"LowHighAscii",
"MinCharsForString":4,
"SeekNearbyTargets":true,
"UseRelocData":false,
"SmartPlpHandling":false,
"SmartPlbHandling":true},

"PlatformSymbolFileIdentifiers":["RT:Apple/F8-ROM.sym65",
"RT:Apple/Cxxx-IO.sym65",
"RT:Apple/C08x-DiskII.sym65",
"RT:Apple/ProDOS8.sym65",
"PROJ:BI.sym65",
"RT:Apple/Applesoft.sym65",
"PROJ:DBLDOS.sym65"],
"ExtensionScriptFileIdentifiers":["RT:Apple/ProDOS8.cs",
"RT:Apple/VisHiRes.cs"],
"ProjectSyms":{
}},

"AddressMap":[{
"Offset":0,
"Addr":12288}],
"TypeHints":[{
"Low":0,
"High":0,
"Hint":"Code"},

{
"Low":85,
"High":102,
"Hint":"InlineData"},

{
"Low":256,
"High":256,
"Hint":"Code"},

{
"Low":384,
"High":384,
"Hint":"Code"},

{
"Low":804,
"High":804,
"Hint":"Code"},

{
"Low":1406,
"High":1406,
"Hint":"Code"}],
"StatusFlagOverrides":{
},

"Comments":{
"0":"Allocate $0A buffers to copy our code into",
"75":"always",
"85":"pages (high bytes) to relocate",
"94":"relocate to these pages",
"103":"start copy from page $31",
"112":"save old external command handler",
"115":"to call at end of our handler",
"124":"end copy at $3AFF",
"133":"0",
"140":"where we relocated handler_entry (page $31) to",
"277":"4 chars",
"307":"5 chars",
"322":"ignore spaces",
"342":"Chain to next command handler",
"355":"#$04 = BI_SD (slot/drive)",
"359":"cmd len-1",
"372":"0 = external command",
"377":"At least one bit must be set in PBITS",
"379":"so BI_FNOPT ($10) is typical and harmless",
"383":"Return to BASIC to parse command line",
"384":"update BASIC\u0027s default SLOT from params",
"390":"A=slot*16 (unit number)",
"394":"update default DRIVE from params",
"403":"if drive 2, set high bit of unit number",
"405":"as per ProDOS requirements",
"408":"read",
"413":"DOS VTOC",
"450":"note we use $73 instead of $00",
"452":"temp -- save vol #",
"470":"restore temp -- why not move the vol # lookup here?",
"535":"locked",
"560":"text",
"564":"int basic",
"568":"applesoft",
"572":"binary",
"679":"yet another temp stored outside zp",
"715":"go to next place",
"720":"unused",
"721":"ones",
"722":"tens",
"723":"hundreds place",
"1795":"was write ($81), now read ($80)",
"2328":"always #$83",
"2330":"always #$39",
"2332":"unit",
"2340":"memsize",
"2346":"memsize+1",
"2352":"track (A)",
"2356":"sector (Y)",
"2363":"block number lo",
"2366":"block number hi",
"2374":"block buffer msb",
"2389":"MLI write_block?",
"2421":"updated in code",
"2424":"updated in code",
"2436":"(slot 6 on startup)",
"2442":"unit number",
"2443":"block buffer",
"2445":"block number",
"2451":"temp copy of \u0027sector\u0027 used by ts_to_block",
"2488":"save sector",
"2491":"track in X",
"2495":"multiply track X*8 -\u003e block Y,A",
"2504":"always",
"2506":"save A",
"2509":"equiv. to inx, since X=$FF",
"2511":"was this sector 0?",
"2516":"restore A",
"2520":"sector 1?",
"2528":"increase block num by 7",
"2534":"sector E?",
"2541":"just increase X by 1",
"2543":"sector F?",
"2551":"increase block num by 7",
"2556":"and increase X by 1",
"2558":"redundant, sector_tmp already in A",
"2561":"test even/odd",
"2564":"even sector, subtract $0E",
"2566":"bump X when even",
"2567":"always",
"2569":"odd sector, subtract $0E+1",
"2577":"add A/2 to block num",
"2582":"(bump blockhi if wrapped)",
"2584":"maybe type-in artifact"},

"LongComments":{
"-2147483647":{
"Text":"DBLDOS -- a program by Jason Coleman (1986) which adds 3 commands, DCAT/DLOAD/DSAVE, to BASIC.SYSTEM. Originally published in machine language format in COMPUTE! Magazine, Oct 1987, page 90.\r\n\r\nDCAT is experimentally confirmed to CATALOG DOS 3.3 disks, and DLOAD to load BASIC and binary programs from a DOS 3.3 disk.\r\n\r\nSee Beneath Apple ProDOS, A-30 (TYPE Command), for an example program that adds commands to the Basic Interpreter. Also see A.3.2, ProDOS 8 Technical Reference Manual.\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"103":{
"Text":"Copy $3100-$3AFF to the allocated buffers and install ourselves at the head of the handler chain.",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12":{
"Text":"Relocate code into the buffer space.",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"384":{
"Text":"Once the DCAT command line has been parsed successfully by BASIC, we resume here.",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"355":{
"Text":"Inform BI of DCAT parsing params, and parse it.\r\n  DCAT [Sn,Dn]\r\n\r\nFilename may be provided, but will be ignored (quirk of BASIC.SYSTEM). (Note: syntax error results if filename is provided along with slot/drive; unknown why.)",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"2441":{
"Text":"Params for MLI READ_BLOCK and WRITE_BLOCK.",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"2488":{
"Text":"On entry, track in A, sector in Y. Returns ProDOS block hi,lo in Y,A. Returns which half of block in X (0 first, 1 second) as one 512-byte block corresponds to two 256-byte sectors.\r\n\r\nsector_tmp is a copy of \u0027sector\u0027. There is some (unnecessary?) indirection where the track,sector is passed in registers instead of using the table they are already stored in, meaning a temp has to be used to save this register. And these registers are loaded via an indirect pointer to the table. But there is only one table, so all the indirection and copies are for no purpose.\r\n\r\nTS to block algorithm can be found in B.5 - DOS 3.3 Disk Organization.\r\n\r\n      Block = (8 * Track) + Sector Offset\r\n\r\n        Sector : 0 1 2 3 4 5 6 7 8 9 A B C D E F\r\n Sector Offset : 0 7 6 6 5 5 4 4 3 3 2 2 1 1 0 7\r\n  Half of Block: 1 1 2 1 2 1 2 1 2 1 2 1 2 1 2 2\r\n\r\nThis section is 95 bytes long. I think it could be made shorter and faster with a 16-byte table lookup of sector offsets, with the block half flag in bit 0 or bit 7 of each offset.",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"2328":{
"Text":"Input Y,A is a pointer to a table containing command, unit, memsize, track and sector. Copy these into memory locations or registers to operate on, then read or write a track and sector.\r\n\r\nNote that the table pointer is constant -- there\u0027s only one in this program -- so the indirection and copying is superfluous.",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"2435":{
"Text":"Params for virtual RWTS command. This will be translated into a ProDOS MLI READ_BLOCK or WRITE_BLOCK. The internal RWTS call takes a pointer to this table, although there is only one table.",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0}},

"Notes":{
"498":{
"Text":"zp $00 is used as a temp pointer into our buffer. Also note it is made the same as $73 (which we used directly above, oddly).\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"2575":{
"Text":"Check what happens if subtracting $0E from odd sector instead. The discard of lower bit here is suspicious.",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":-256}},

"UserLabels":{
"12":{
"Label":"start",
"Value":12300,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"85":{
"Label":"relocate_from",
"Value":12373,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"94":{
"Label":"relocate_to",
"Value":12382,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"44":{
"Label":"lda_src",
"Value":12332,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"80":{
"Label":"sta_dst",
"Value":12368,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"165":{
"Label":"startup_msg",
"Value":12453,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"164":{
"Label":"exit",
"Value":12452,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"153":{
"Label":"write_start_msg",
"Value":12441,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"256":{
"Label":"handler_entry",
"Value":12544,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"103":{
"Label":"copy_code",
"Value":12391,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"342":{
"Label":"chain_to_original",
"Value":12630,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"283":{
"Label":"DCAT_str",
"Value":12571,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"261":{
"Label":"dcat_char",
"Value":12549,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"350":{
"Label":"DLOAD_str",
"Value":12638,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"345":{
"Label":"DSAVE_str",
"Value":12633,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"341":{
"Label":"next_handler",
"Value":12629,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"318":{
"Label":"dsave_char",
"Value":12606,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"314":{
"Label":"check_dsave",
"Value":12602,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"291":{
"Label":"dload_char",
"Value":12579,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"287":{
"Label":"check_dload",
"Value":12575,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"355":{
"Label":"dcat",
"Value":12643,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"384":{
"Label":"dcat_xtrn",
"Value":12672,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"668":{
"Label":"disk_volume_str",
"Value":12956,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"405":{
"Label":"d1",
"Value":12693,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"2441":{
"Label":"block_params",
"Value":14729,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"2439":{
"Label":"track",
"Value":14727,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"2440":{
"Label":"sector",
"Value":14728,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"2431":{
"Label":"error",
"Value":14719,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"2436":{
"Label":"unit",
"Value":14724,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"2437":{
"Label":"rwtsbuf",
"Value":14725,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"2488":{
"Label":"ts_to_block",
"Value":14776,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"2451":{
"Label":"sector_tmp",
"Value":14739,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"2495":{
"Label":"add8",
"Value":14783,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"2450":{
"Label":"blocklo",
"Value":14738,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"2435":{
"Label":"rwtscmd",
"Value":14723,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"2328":{
"Label":"rwts",
"Value":14616,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"2448":{
"Label":"rwtsbuf_tmp",
"Value":14736,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"Uncertain"},

"2421":{
"Label":"src",
"Value":14709,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"2424":{
"Label":"dst",
"Value":14712,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"2452":{
"Label":"write",
"Value":14740,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"2419":{
"Label":"copy_sect_buf",
"Value":14707,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"574":{
"Label":"cout",
"Value":12862,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"445":{
"Label":"catalog",
"Value":12733,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"456":{
"Label":"print_volume",
"Value":12744,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"719":{
"Label":"num_tmp",
"Value":13007,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"721":{
"Label":"places",
"Value":13009,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"679":{
"Label":"print_3_digits",
"Value":12967,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"709":{
"Label":"print_place",
"Value":12997,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"687":{
"Label":"loop",
"Value":12975,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"684":{
"Label":"start",
"Value":12972,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"498":{
"Label":"file_entry",
"Value":12786,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"724":{
"Label":"dload",
"Value":13012,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"2520":{
"Label":"sector01",
"Value":14808,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"2534":{
"Label":"sector0e",
"Value":14822,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"2543":{
"Label":"sector0f",
"Value":14831,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"2533":{
"Label":"rts",
"Value":14821,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"2556":{
"Label":"ret",
"Value":14844,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"2583":{
"Label":"rts",
"Value":14871,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"2558":{
"Label":"sector_other",
"Value":14846,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"2569":{
"Label":"odd",
"Value":14857,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"2571":{
"Label":"sub",
"Value":14859,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"2506":{
"Label":"sector",
"Value":14794,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"}},

"OperandFormats":{
"85":{
"Length":9,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"94":{
"Length":9,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"115":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"chain_to_original",
"Part":"Low"}},

"121":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"chain_to_original",
"Part":"Low"}},

"165":{
"Length":36,
"Format":"StringGeneric",
"SubFormat":"HighAscii",
"SymbolRef":null},

"201":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"202":{
"Length":36,
"Format":"StringGeneric",
"SubFormat":"HighAscii",
"SymbolRef":null},

"238":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"239":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"342":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"362":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"dcat_xtrn",
"Part":"High"}},

"367":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"dcat_xtrn",
"Part":"Low"}},

"433":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"rwtscmd",
"Part":"High"}},

"435":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"rwtscmd",
"Part":"Low"}},

"486":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"rwtscmd",
"Part":"High"}},

"488":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"rwtscmd",
"Part":"Low"}},

"527":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"535":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"560":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"564":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"568":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"572":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"577":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"721":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"722":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"723":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"1124":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"rwtscmd",
"Part":"Low"}},

"1126":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"rwtscmd",
"Part":"High"}},

"1168":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"rwtscmd",
"Part":"Low"}},

"1170":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"rwtscmd",
"Part":"High"}},

"1813":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"rwtscmd",
"Part":"High"}},

"1815":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"rwtscmd",
"Part":"Low"}},

"2363":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"block_params",
"Part":"Low"}},

"2366":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"block_params",
"Part":"Low"}},

"2437":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"2443":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"2448":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"2584":{
"Length":1,
"Format":"Junk",
"SubFormat":"None",
"SymbolRef":null}},

"LvTables":{
},

"Visualizations":[],
"VisualizationAnimations":[],
"VisualizationSets":{
},

"RelocList":{
},

"DbrValues":{
}}
